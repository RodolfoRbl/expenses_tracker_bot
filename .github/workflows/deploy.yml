name: Deploy to AWS Lambda

on:
  push:
    branches:
      - dev

env:
  AWS_REGION: eu-central-1
  FUNCTION_NAME: ai_expenses_bot_v2
  LAYER_NAME: telegram-bot-layer

jobs:
  build-layer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy Layer if not exists
        run: |
          # Check if the layer already exists
          EXISTING_LAYER_VERSION=$(aws lambda list-layer-versions \
          --layer-name ${{ env.LAYER_NAME }} \
          --query 'LayerVersions[0].Version' \
          --region ${{ env.AWS_REGION }} \
          --output text)
          echo "Existing Layer Version: $EXISTING_LAYER_VERSION"

          if [ "$EXISTING_LAYER_VERSION" = "None" ]; then
          echo "Layer does not exist. Deploying new layer..."

          # Create a zip file for the layer
          mkdir -p python
          pip install -r requirements.txt -t python
          zip -r my_layer.zip python
          mkdir -p layers
          mv my_layer.zip layers/
          rm -rf python

          # Publish the layer
          LAYER_VERSION=$(aws lambda publish-layer-version \
          --layer-name ${{ env.LAYER_NAME }} \
          --zip-file fileb://layers/my_layer.zip \
          --compatible-runtimes python3.9 python3.10 python3.11 \
          --query 'Version' \
          --output text)

          # Build the full layer ARN
          LAYER_ARN="arn:aws:lambda:${{ env.AWS_REGION }}:${{ secrets.AWS_ACCOUNT_ID }}:layer:${{ env.LAYER_NAME }}:$LAYER_VERSION"

          # Attach layer to the function
          aws lambda update-function-configuration \
            --function-name ${{ env.FUNCTION_NAME }} \
            --layers $LAYER_ARN \
            --handler lambda_function.lambda_handler \
            --timeout 30

          else
          echo "Layer already exists. Skipping deployment."
            fi

  deploy-code:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Create deployment package
        run: |
          cd src
          zip -r ../deployment.zip . -x ".git/*" ".github/*" "__pycache__/*" "*.pyc"

      - name: Deploy to Lambda
        run: |
          aws lambda update-function-code \
            --function-name ${{ env.FUNCTION_NAME }} \
            --zip-file fileb://deployment.zip
